name: CI

on: [push]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install dependencies
      run: |
        npm install -g serverless
        npm install -g serverless-mocha-plugin
        npm install
    - name: Testing Serverles Functions
      run: |
        npm test
        npx codecov
      env:
        CODECOV_TOKEN: aededb0b-b3f0-4540-b927-710e9ef1dbe5

  integration-test:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install dependencies
        run: |
          npm install -g serverless
          npm install -g serverless-mocha-plugin
          npm install -g yarn
          npm install
      - name: Testing integration with Jest
        run: |
          mkdir tmp
          npx yarn service:start
          npx yarn integration
          npx yarn service:stop

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Install dependencies
        run: |
          npm install -g serverless
          npm install -g serverless-mocha-plugin
      - name: serverless deploy
        run: sls deploy -v
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: serverless info
        run: sls info
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: serverless test
        run: sls invoke -f currentdate
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}